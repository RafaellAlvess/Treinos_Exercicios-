# -*- coding: utf-8 -*-
"""Lets_code_exercicios.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nKnu2hR_LoWFwTHLdAf-sC9I7JIdLS02

**Quest√£o 1**

Fa√ßa um programa que pe√ßa ao usu√°rio um n√∫mero e imprima todos os n√∫meros de um at√© o
n√∫mero que o usu√°rio informar
Exemplo: Se o usu√°rio informar o n√∫mero 5, seu programa dever√° imprimir: 1 2 3 4 5.
"""

numero = int(input('Informe um n√∫mero inteiro: '))

for i in range(1, numero + 1):
  print(i, end=' ')

for i in range(numero):
  print(i + 1, end=' ')

"""**Quest√£o 2**

Crie um programa que leia um valor qualquer e apresente uma mensagem dizendo em qual
dos seguintes intervalos ([0,25], (25,50], (50,75], (75,100]) este valor se encontra. Caso o valor n√£o
esteja em nenhum destes intervalos, dever√° ser impressa a mensagem ‚ÄúFora de intervalo‚Äù. Veja
alguns exemplo abaixo:
"""

numero = float(input('Informe um n√∫mero: '))

if numero < 0 or numero > 100:
  print('Fora de intervalo')
elif numero <= 25:
  print('[0, 25]')
elif numero <= 50:
  print('(25, 50]')
elif numero <= 75:
  print('(50,75]')
else:
  print('(75,100]')

"""**Quest√£o 3**

Crie uma fun√ß√£o que recebe o valor do raio de um c√≠rculo como par√¢metro e retorna o valor da
√°rea desse c√≠rculo. Lembrando que a √°rea de c√≠rculo √© dada pela equa√ß√£o: A = ‚Ñº r^2.

"""

from math import pi

def calcular_area_circulo(raio):
  return pi * raio ** 2

raio = 10 
area = calcular_area_circulo(10)

print(area)

"""**Quest√£o 4**

Fa√ßa um programa que pe√ßa 2 n√∫meros inteiros e um n√∫mero real, calcule e mostre:
a) o produto entre o dobro do primeiro e a metade do segundo.
b) a soma entre o triplo do primeiro e o terceiro.
c) o terceiro elevado ao cubo
"""

primeiro = int(input('Informe um n√∫mero inteiro: '))
segundo = int(input('Informe outro n√∫mero inteiro: '))
terceiro = int(input('Informe um n√∫mero real: '))

# a
print('\nLETRA (a)')
dobro_do_primeiro = primeiro * 2
metade_do_segundo = segundo / 2
print('(2 x N1) * (N2 / 2) =', dobro_do_primeiro * metade_do_segundo)

# b
print('\nLETRA (b)')
triplo_do_primeiro = primeiro * 3
print('(3 x N1) + N3 =', triplo_do_primeiro + terceiro)

# c
print('\nLETRA (c)')
print('N3^3 =', terceiro ** 3)

"""**Quest√£o 5**

Vamos fazer um programa para verificar quem √© o assassino de um crime. Para descobrir o
assassino, a pol√≠cia faz um pequeno question√°rio com 5 perguntas onde a resposta s√≥ pode ser
sim ou n√£o:
1. Mora perto da v√≠tima?
2. J√° trabalhou com a v√≠tima?
3. Telefonou para a v√≠tima?
4. Esteve no local do crime?
5. Devia para a v√≠tima?

Cada resposta sim d√° um ponto para o suspeito. A pol√≠cia considera que os suspeitos com 5
pontos s√£o os assassinos, com 4 a 3 pontos s√£o c√∫mplices e 2 pontos s√£o apenas suspeitos,
necessitando de outras investiga√ß√µes. Valores abaixo de 2 s√£o liberados.
No seu programa, voc√™ deve fazer essas perguntas e, de acordo com as respostas do usu√°rio,
voc√™ vai informar como a pol√≠cia o considera
"""

mora_perto = input('Mora perto da v√≠tima? ').lower()
trabalhou_com = input('J√° trabalhou com a v√≠tima? ').lower()
telefonou_para = input('Telefonou para a v√≠tima? ').lower()
esteve_no_local = input('Esteve no local do crime? ').lower()
devia_para = input('Devia para a v√≠tima? ').lower()

pontuacao_total = 0

if mora_perto == 'sim':
  pontuacao_total += 1
if trabalhou_com == 'sim':
  pontuacao_total += 1
if telefonou_para == 'sim':
  pontuacao_total += 1
if esteve_no_local == 'sim':
  pontuacao_total += 1
if devia_para == 'sim':
  pontuacao_total += 1

if pontuacao_total == 5:
  print('Assassino! üò±')
elif pontuacao_total >= 3:
  print('C√∫mplice üò®')
elif pontuacao_total == 2:
  print('Suspeito üßê')
else:
  print('Liberado üôå')